import sklearn
import numpy
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

!pip install scikit-learn==1.3.0

df = pd.read_csv('IRIS.csv')
df.head()

df.describe()

df.info()

df['species'].value_counts()

df.isnull().sum()

df['sepal_length'].hist()

df['sepal_width'].hist()

df['petal_length'].hist()

df['petal_width'].hist()

colors = ['red', 'orange','blue']
species = ['Iris-setosa','Iris-versicolor','Iris-virginica']

for i in range(3):
    x = df[df['species'] == species[i]]
    plt.scatter(x['sepal_length'], x['sepal_width'], c = colors[i], label=species[i])
    plt.xlabel("sepal_length")
    plt.ylabel("sepal_width")
    plt.legend()

for i in range(3):
    x = df[df['species'] == species[i]]
    plt.scatter(x['sepal_length'], x['sepal_width'], c = colors[i], label=species[i])
plt.xlabel("petal_width")
plt.ylabel("sepal_width")
plt.legend()
        

for i in range(3):
    y = df[df['species'] == species[i]]
    plt.scatter(x['sepal_length'], x['sepal_width'], c = colors[i], label=species[i])
plt.xlabel("sepal_length")
plt.ylabel("petal_length")
plt.legend()
        

for i in range(3):
    y = df[df['species'] == species[i]]
    plt.scatter(x['sepal_length'], x['sepal_width'], c = colors[i], label=species[i])
plt.xlabel("sepal_width")
plt.ylabel("petal_length")
plt.legend()
        

df.corr

corr = df.corr()
fig, ax = plt.subplots(figsize=(3,4))
sns.heatmap(corr, annot=True, ax=ax)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

df['species'] = le.fit_transform(df['species'])
df.head

from sklearn.model_selection import train_test_split
x = df.drop(columns=['species'])
y = df['species']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.30)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression

